1. Estrutura de Diretórios
$ mkdir -p /root/ca/root-ca/{certs,crl,newcerts,private}
$ mkdir -p /root/ca/intermediate-ca/{certs,crl,csr,newcerts,private}
$ mkdir /root/ca/user-certs
$ chmod 700 /root/ca/root-ca/private /root/ca/intermediate-ca/private
$ touch /root/ca/root-ca/index.txt /root/ca/intermediate-ca/index.txt
$ echo 1000 > /root/ca/root-ca/serial
$ echo 1000 > /root/ca/intermediate-ca/serial

2. Arquivos de Configuração
2.1 Configuração da CA Root (/root/ca/root-ca/openssl.cnf)
$ vi /root/ca/root-ca/openssl.cnf

[ ca ]
default_ca = CA_default

[ CA_default ]
dir               = /root/ca/root-ca
certs             = $dir/certs
crl_dir           = $dir/crl
new_certs_dir     = $dir/newcerts
database          = $dir/index.txt
serial            = $dir/serial
private_key       = $dir/private/root-ca.key.pem
certificate       = $dir/certs/root-ca.cert.pem
crlnumber         = $dir/crlnumber
crl               = $dir/crl/root-ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30
default_md        = sha256
name_opt          = ca_default
cert_opt          = ca_default
default_days      = 3650
preserve          = no
policy            = policy_strict

[ policy_strict ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only
default_md          = sha256
prompt              = no

[ req_distinguished_name ]
countryName                     = BR
stateOrProvinceName             = Sao Paulo
localityName                    = Sao Paulo
0.organizationName              = senhasegura
organizationalUnitName          = IT Department
commonName                      = My Root CA
emailAddress                    = mt4@senhasegura.com

[ v3_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical,CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical,CA:true,pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ crl_ext ]
authorityKeyIdentifier=keyid:always

2.2 Configuração da CA Intermediária (/root/ca/intermediate-ca/openssl.cnf)
$ vi /root/ca/intermediate-ca/openssl.cnf

[ ca ]
default_ca = CA_default

[ CA_default ]
dir               = /root/ca/intermediate-ca
certs             = $dir/certs
crl_dir           = $dir/crl
new_certs_dir     = $dir/newcerts
database          = $dir/index.txt
serial            = $dir/serial
private_key       = $dir/private/intermediate-ca.key.pem
certificate       = $dir/certs/intermediate-ca.cert.pem
crlnumber         = $dir/crlnumber
crl               = $dir/crl/intermediate-ca.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 30
default_md        = sha256
name_opt          = ca_default
cert_opt          = ca_default
default_days      = 3650
preserve          = no
policy            = policy_loose

[ policy_loose ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only
default_md          = sha256
prompt              = no

[ req_distinguished_name ]
countryName                     = BR
stateOrProvinceName             = Sao Paulo
localityName                    = Sao Paulo
0.organizationName              = senhasegura
organizationalUnitName          = SEGi9
commonName                      = My Intermediate CA
emailAddress                    = segi9@senhasegura.com

[ v3_intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical,CA:true,pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ crl_ext ]
authorityKeyIdentifier=keyid:always

[ usr_cert ]
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "User Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

3. Criar e Assinar Certificados
3.1 Criar o Par de Chaves e Certificado da CA Root
$ openssl genpkey -algorithm RSA -out /root/ca/root-ca/private/root-ca.key.pem -pkeyopt rsa_keygen_bits:4096
$ chmod 400 /root/ca/root-ca/private/root-ca.key.pem

$ openssl req -config /root/ca/root-ca/openssl.cnf -key /root/ca/root-ca/private/root-ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -out /root/ca/root-ca/certs/root-ca.cert.pem
$ chmod 444 /root/ca/root-ca/certs/root-ca.cert.pem

3.2 Criar o Par de Chaves da CA Intermediária
$ openssl genpkey -algorithm RSA -out /root/ca/intermediate-ca/private/intermediate-ca.key.pem -pkeyopt rsa_keygen_bits:4096
$ chmod 400 /root/ca/intermediate-ca/private/intermediate-ca.key.pem

3.3 Criar a Solicitação de Certificado (CSR) da CA Intermediária
$ openssl req -config /root/ca/intermediate-ca/openssl.cnf -new -sha256 -key /root/ca/intermediate-ca/private/intermediate-ca.key.pem -out /root/ca/intermediate-ca/csr/intermediate-ca.csr.pem

3.4 Assinar o Certificado da CA Intermediária com a CA Root
$ openssl ca -config /root/ca/root-ca/openssl.cnf -extensions v3_intermediate_ca -days 3650 -notext -md sha256 -in /root/ca/intermediate-ca/csr/intermediate-ca.csr.pem -out /root/ca/intermediate-ca/certs/intermediate-ca.cert.pem
$ chmod 444 /root/ca/intermediate-ca/certs/intermediate-ca.cert.pem

3.5 Criar a Cadeia de Certificados
$ cat /root/ca/intermediate-ca/certs/intermediate-ca.cert.pem /root/ca/root-ca/certs/root-ca.cert.pem > /root/ca/intermediate-ca/certs/ca-chain.cert.pem
$ chmod 444 /root/ca/intermediate-ca/certs/ca-chain.cert.pem

4. Criar e Assinar Certificado de Usuário Final
4.1 Criar o Par de Chaves do Usuário Final
$ openssl genpkey -algorithm RSA -out /root/ca/user-certs/user.key.pem -pkeyopt rsa_keygen_bits:2048
$ chmod 400 /root/ca/user-certs/user.key.pem

4.2 Criar a Solicitação de Certificado (CSR) do Usuário Final
$ openssl req -config /root/ca/intermediate-ca/openssl.cnf -key /root/ca/user-certs/user.key.pem -new -sha256 -out /root/ca/user-certs/user.csr.pem

4.3 Assinar o Certificado de Usuário Final com a CA Intermediária
$ openssl ca -config /root/ca/intermediate-ca/openssl.cnf -extensions usr_cert -days 375 -notext -md sha256 -in /root/ca/user-certs/user.csr.pem -out /root/ca/user-certs/user.cert.pem
$ chmod 444 /root/ca/user-certs/user.cert.pem

5. Verificar a Cadeia de Certificados
$ openssl verify -CAfile /root/ca/intermediate-ca/certs/ca-chain.cert.pem /root/ca/user-certs/user.cert.pem