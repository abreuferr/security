#: Title : DPOD Luna Cloud HSM Service
#: Author : "Caio Abreu Ferreira" <cferreira@senhasegura.com>
#: Description : From Linux Minimal Client Create a Docker Container to Access a DPOD Luna Cloud HSM Service
#: Options : None
#: Reference :  https://cpl.thalesgroup.com/resources/encryption/docker-container-integration-guide
            
###########
#
# Objetivo
#
###########

O objetivo deste texto é o de criar um roteiro de instalação e configuração do cliente no 
DPOD Luna Cloud HSM Service em um container Docker. 

###########
#
# Informação
#
###########

Sistema Operacional - GNU/Linux Debian 11

###########
#
# Thales Service
#
###########

- Services 
    - Service tab > Add New Service > HSM on Demand
    - Add HSM on Demand Service > Service Name : "senhasegura" / "Remove FIPS Restrictions"
    - Next > Finish

- My Services > "senhasegura" > Service Clients
    - Botão "Create Service Client" > Service Client Name : "setup-HSMonDemand_Client" > Botão "Create Service Client" > Botão "Download Client" > "setup-HSMonDemand_Client.zip"

###########
#
# Docker
#
###########

# Atualização do Gnu/Linux Debian
#
> sudo apt-get update
> sudo apt-get install ca-certificates curl gnupg lsb-release

# Adicionando a chave de criptografia no GNU/Linux Debian
# ao repositório local.
#
> curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Importando o repositório do Docker no GNU/Linux Debian
#
> echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Instalação, configuração e teste do Docker no GNU/Linux Debian
#
> sudo apt-get update
> sudo apt-get install docker-ce docker-ce-cli containerd.io
> sudo usermod -aG docker $USER
> docker run hello-world

###########
#
# From Linux Minimal Client Create a Docker Container to Access a DPOD Luna Cloud HSM Service - PARTE 01
#
###########

# Pre-requisito
#
$ ls -l $HOME
-rw-r--r-- 1 cferreira cferreira 46080000 Nov 30 10:57 LunaClient-Minimal-10.4.0-417.x86_64.tar
-rw-r--r-- 1 cferreira cferreira 18764899 Dec  3 10:23 setup-HSMonDemand_Client.zip


# Diretórios de trabalho
#
$ mkdir $HOME/luna-docker
$ mkdir $HOME/luna-docker/config 
$ mkdir $HOME/luna-docker/config/certs

$ cp $HOME/LunaClient-Minimal-10.4.0-417.x86_64.tar $HOME/luna-docker/

$ cd $HOME/luna-docker
$ tar -xf LunaClient-Minimal-10.4.0-417.x86_64.tar

$ cd $HOME/luna-docker
$ cp LunaClient-Minimal-10.4.0-417.x86_64/Chrystoki-template.conf  $HOME/luna-docker/config/Chrystoki.conf

$ export ChrystokiConfigurationPath=$HOME/luna-docker/config

$ MIN_CLIENT_DIR=$HOME/luna-docker/LunaClient-Minimal-10.4.0-417.x86_64
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s Chrystoki2 -e LibUNIX -v $MIN_CLIENT_DIR/libs/64/libCryptoki2.so
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s Chrystoki2 -e LibUNIX64 -v $MIN_CLIENT_DIR/libs/64/libCryptoki2_64.so
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s Misc -e ToolsDir -v $MIN_CLIENT_DIR/bin/64
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "LunaSA Client" -e SSLConfigFile -v $MIN_CLIENT_DIR/openssl.cnf
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "LunaSA Client" -e ClientPrivKeyFile -v $HOME/luna-docker/config/certs/dockerlunaclientKey.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "LunaSA Client" -e ClientCertFile -v $HOME/luna-docker/config/certs/dockerlunaclient.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "LunaSA Client" -e ServerCAFile -v $HOME/luna-docker/config/certs/CAFile.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "Secure Trusted Channel" -e ClientTokenLib -v $MIN_CLIENT_DIR/libs/64/libSoftToken.so
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "Secure Trusted Channel" -e SoftTokenDir -v $HOME/luna-docker/config/stc/token
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "Secure Trusted Channel" -e ClientIdentitiesDir -v $HOME/luna-docker/config/stc/client_identities
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s "Secure Trusted Channel" -e PartitionIdentitiesDir -v $HOME/luna-docker/config/stc/partition_identities

$ sed -i -e 's#'$HOME'/luna-docker/config#/usr/local/luna/config#g' -e 's#'$HOME'/luna-docker/LunaClient-Minimal-\([0-9\.-]\+\)x86_64#/usr/local/luna#g' $ChrystokiConfigurationPath/Chrystoki.conf

# Dockerfile
#
$ cat Dockerfile
FROM centos:centos7 
ARG MIN_CLIENT 
COPY $MIN_CLIENT.tar /tmp 
RUN mkdir -p /usr/local/luna 
RUN tar xvf /tmp/$MIN_CLIENT.tar --strip 1 -C /usr/local/luna 
ENV ChrystokiConfigurationPath=/usr/local/luna/config 
ENV PATH="/usr/local/luna/bin/64:${PATH}" 
ENTRYPOINT  /bin/bash 
#End of the Dockerfile

# Criando a imagem
#
$ docker build . --build-arg MIN_CLIENT=LunaClient-Minimal-10.4.0-417.x86_64 -t lunaclient-image

# Listando a imagem criada
#
$ docker image ls

# Inicializando a imagem
#
$ docker run -it --name lunaclient -v $PWD/config:/usr/local/luna/config lunaclient-image

# Exit
#
# exit

###########
#
# From Linux Minimal Client Create a Docker Container to Access a DPOD Luna Cloud HSM Service - PARTE 02
#
###########

$ mkdir $HOME/luna-docker/dpod

$ unzip $HOME/Documents/hsm/thales_luna/src/setup-HSMonDemand_Client.zip -d $HOME/luna-docker/dpod

$ cp $HOME/luna-docker/dpod/server-certificate.pem $HOME/luna-docker/config/certs/   
$ cp $HOME/luna-docker/dpod/partition-ca-certificate.pem $HOME/luna-docker/config/certs/
$ cp $HOME/luna-docker/dpod/partition-certificate.pem $HOME/luna-docker/config/certs/

$ cat $HOME/luna-docker/dpod/Chrystoki.conf (ORIGEM)
(...)
XTC={
    (...)
}

REST={
    (...)
}

$ vi $HOME/luna-docker/config/Chrystoki.conf (DESTINO)
(...)
XTC={
    (...)
}

REST={
    (...)
}

$ vi $HOME/luna-docker/config/Chrystoki.conf (DESTINO)
(...)
# comantar
# PartitionData00 = 1285325060503, na.hsm.dpondemand.io, 443;

# adicionar
ServerName=na.hsm.dpondemand.io 
ServerPort=443
(...)

$ export ChrystokiConfigurationPath=$HOME/luna-docker/config   
$ MIN_CLIENT_DIR=$HOME/luna-docker/LunaClient-Minimal-10.4.0-417.x86_64   
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s XTC -e PartitionCAPath -v /usr/local/luna/config/certs/partition-ca-certificate.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s XTC -e PartitionCertPath00 -v /usr/local/luna/config/certs/partition-certificate.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s REST -e SSLClientSideVerifyFile -v /usr/local/luna/config/certs/server-certificate.pem
pass
$ $MIN_CLIENT_DIR/bin/64/configurator setValue -s Misc -e PluginModuleDir -v /usr/local/luna/plugins
pass

$ docker ps -a
$ docker start <container_id>
$ docker attach <container_id>

###########
#
# LUNACM
#
###########

; Inicializar o LunaCM para verificar a conexão NTLS
$ ./bin/64/lunacm

; Exibir os slots disponiveis
lunacm:>slot list
	Slot Id ->              3
	Label ->                Partition SO
	Serial Number ->        1294649894832
	Model ->                Cryptovisor7
	Firmware Version ->     7.3.0
	CV Firmware Version ->  1.4.2
	Plugin Version ->       Cloud 2.0.0-175
	Configuration ->        Luna User Partition With SO (PW) Signing With Cloning Mode
	Slot Description ->     Net Token Slot
	FM HW Status ->         FM Not Supported

	Current Slot Id: 3

; Definir o slot de trabalho, "3"
lunacm:>slot set -slot <slotnum>
lunacm:>slot set -slot 3
	Current Slot Id:    3     (Luna User Slot 7.3.0 (PW) Signing With Cloning Mode)

; Definir o nome da partição, "Partition SO"
lunacm:>partition init -label <label>
lunacm:>partition init -label Partition SO

	You are about to initialize the partition that is already initialized.
	All contents of the partition will be destroyed.

	You are required to provide the current Partition SO password.

	Are you sure you wish to continue?

	Type 'proceed' to continue, or 'quit' to quit now ->proceed

	Enter password for Partition SO: AAaa00--
	
	Option -domain was not specified. It is required.

	Enter the domain name: AAaa00--
	Re-enter the domain name: AAaa00--

; Logar na partição "Partition SO"
lunacm:>role login -name Partition SO   
	enter password: AAaa00--

; Inicializar a partição "Crypto Office"
lunacm:>role init -name Crypto Officer  
	enter new password: AAaa00--==
	re-enter new password: AAaa00--==

; Logout
lunacm:>role logout

; Logon com o usuário "Crypto Officer"
lunacm:>role login -name Crypto Officer 
	enter password: AAaa00--==

; Alterar a senha inicial do Crypto Officer
lunacm:>role changepw -name Crypto Officer  
	enter existing password: AAaa00--==
	enter new password: BBbb00--==
	re-enter new password: BBbb00--==

; Criação do usuário "Crypto User"
lunacm:>role init -name Crypto User
	enter new password: CCcc00--==
	re-enter new password: CCcc00--==

; Sair do LunaCM
lunacm:>exit


###########
#
# CKDEMO
#
###########

$ ckdemo

#
# Chave AES
#

> 1
> 3
    Enter your choice : 1
    Partition SO        [0]
    Crypto Officer      [1]
    Crypto User         [2]: 1
    Enter PIN           : BBbb00--==

Enter your choice : 45
Select type of key to generate
[ 1] DES     [ 2] DES2   [ 3] DES3             [ 5]  CAST3
[ 6] Generic [ 7] RSA    [ 8] DSA   [ 9] DH    [10]  CAST5
[11] RC2     [12] RC4    [13] RC5   [14] SSL3  [15]  ECDSA
[16] AES     [17] SEED   [18] KCDSA-1024   [19] KCDSA-2048
[20] DSA Domain Param    [21] KCDSA Domain Param          
[22] RSA X9.31           [23] DH X9.42         [24] ARIA
[25] DH PKCS Domain Param [26] RSA 186-3 Aux Primes 
[27] RSA 186-3 Primes     [28] DH X9.42 Domain Param
[29] ECDSA with Extra Bits [30] EC Edwards
[31] EC Montgomery
[40] SM4 [41] SM2
> 16

Enter Key Length in bytes (16, 24, 32): 32
Enter Is Token Attribute [0-1]: 1
Enter Is Sensitive Attribute [0-1]: 1
Enter Is Private Attribute [0-1]: 1
Enter Is Modifiable Attribute [0-1]: 1
Enter Encrypt Attribute [0-1]: 1
Enter Decrypt Attribute [0-1]: 1
Enter Sign Attribute [0-1]: 1
Enter Verify Attribute [0-1]: 1
Enter Wrap Attribute [0-1]: 1
Enter Unwrap Attribute [0-1]: 1
Enter Derive Attribute [0-1]: 1
Enter Extractable Attribute [0-1]: 1

Generated AES Key: 77a60700190000051bbe0800

#
# Número Randômico
#

Enter your choice : 62
How many bytes of random data do you want? 32
Random number = a0:48:69:43:c5:51:d1:0a:66:99:03:5a:57:2d:80:03:06:c2:13:ad:6a:0f:e4:d2:ab:52:a9:72:f6:53:ad:c1: